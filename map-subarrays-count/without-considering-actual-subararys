
Here in these problems
we won't explicitly consider the actual subarrays
instead the map count for
that sum 
gives the number of subarrays 

Link:
https://www.geeksforgeeks.org/problems/sub-arrays-with-equal-number-of-occurences3901/1


Code:

class Solution {
    static int sameOccurrence(int arr[], int x, int y) {
        Map<Integer,Integer> mp=new HashMap<>();
        mp.put(0,1);
        int n=arr.length;
        for(int i=0;i<n;i++){
            if(arr[i]==x)arr[i]=1;
            else if(arr[i]==y)arr[i]=-1;
            else arr[i]=0;
        }
        int sum=0,ans=0;
        for(int ele:arr){
            sum+=ele;
            if(!mp.containsKey(sum))mp.put(sum,1);
            else{
                ans+=mp.get(sum);
                mp.put(sum,mp.get(sum)+1);
            }
        }
        return ans;
    }
}

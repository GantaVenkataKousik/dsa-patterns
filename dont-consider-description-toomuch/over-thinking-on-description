1.
XOR Linked List

An ordinary Doubly Linked List requires space for two address 
fields to store the addresses of previous and next nodes. 
A memory-efficient version of the Doubly Linked List can be 
created using only one space for the address field with every node.
This memory-efficient Doubly Linked List is called XOR Linked List or Memory Efficient
as the list uses bit-wise XOR operation to save space for one address.

Reading at this often confuses us with 
what to do 


see the started code 

here just they want to implement a normal linked list 
instead of single one 

using a single pointer

Link:
https://www.geeksforgeeks.org/problems/xor-linked-list/1

Code:
class Solution {

    static Node insert(Node head, int data) {
        Node newNode =  new Node(data);
        newNode.npx = head;
        return newNode;
    }

    static ArrayList<Integer> getList(Node head) {
        ArrayList<Integer> ans = new ArrayList<>();
        Node temp = head;
        while(temp!=null){
            ans.add(temp.data);
            temp = temp.npx;
        }
        return ans;
    }
}
